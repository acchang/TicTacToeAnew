const newBoard = [...origBoard]
// try simple board to make minimax faster?

function bestAIMove(board) {
  console.log(board)
  let bestScore = -1000
  var move;
  let smartAIArray = listEmptySpaces(board);
  
  for (var i = 0; i < smartAIArray.length; i++) {
    var smartAIpicked = smartAIArray[i];
    console.log(smartAIArray)
    console.log(board)
    board[smartAIpicked].classList.add(TWO_CLASS);
    board[smartAIpicked].innerHTML = TWO_CLASS;
    // newBoard here is passby Value to minimax so it has i added
    console.log ("NEW test: " + smartAIpicked)
    console.log ("winner? " + playerhasWon(board))
    var score = minimax(board)
    // pass by ref so I GET the newBoard operated on by minimax
    console.log("score is " + score)
    console.log ("equal?  " + (board === newBoard))
      board[smartAIpicked].classList.remove(TWO_CLASS);
      board[smartAIpicked].innerHTML = "";
    console.log(smartAIArray)
  if (score > bestScore) {
    bestScore = score;
    move = smartAIpicked;
    console.log("move: " + move + " score: " + score);
  } 
}
origBoard[smartAIpicked].classList.add(TWO_CLASS);
origBoard[smartAIpicked].innerHTML = TWO_CLASS;
console.log (checkClass());
}

function minimax(board) {
  if (playerhasWon(board) &&  playerOneTurn) {
    console.log(board)
    return -10;
  } else if (playerhasWon(board) && !playerOneTurn) {
    console.log(board)
    return 10;
  } else if (emptySpaceRemains(board) === false) {
    console.log(board)
    return 0;
  }
  swapTurns()

  if (!playerOneTurn) {
    let bestScore = 10000; 
    const smartAIArray = listEmptySpaces(newBoard);
    for (var i = 0; i < smartAIArray.length; i++) {
      let smartAIpicked = smartAIArray[i];
      newBoard[smartAIpicked].classList.add(TWO_CLASS);
      newBoard[smartAIpicked].innerHTML = TWO_CLASS;
        let score = minimax(newBoard)
        console.log ("P2 choice " + smartAIpicked + " P2 score " + score)
        newBoard[smartAIpicked].classList.remove(ONE_CLASS);
        newBoard[smartAIpicked].innerHTML = "";
        if (score < bestScore) {
          bestScore = score}
      }
    return bestScore;
    }
   else {
    let bestScore = -100000; 
    console.log(board)
    let playerOneArray = listEmptySpaces(board);
    // newBoard has changed, which is why array doesn't work
    // bc newboard not passed by reference 
    console.log(playerOneArray);
    // this still retains the bestAIMove pick
    for (var i = 0; i < playerOneArray.length; i++) {
      let playerOnePicked = playerOneArray[i];
      board[playerOnePicked].classList.add(ONE_CLASS);
      board[playerOnePicked].innerHTML = ONE_CLASS;
      console.log ("P1 choice " + playerOnePicked)
      console.log ("winner? " + playerhasWon(board))
      let score = minimax(board)
      console.log ("equal?  " + (board === newBoard))
      console.log ("P1 score " + score);
      board[playerOnePicked].classList.remove(ONE_CLASS);
      board[playerOnePicked].innerHTML = "";
      // this is pass by value inside the minimax function
      // I need to pass by reference
      console.log(playerOneArray)
      console.log(board)
      if (score > bestScore) {
        bestScore = score}
      console.log("best score is " + bestScore)
      return bestScore
      }

  }
}



    // score is -10, I don't want it
    // P1 best case -10, 0, 10 ; best is 1000; score < best score
    // P2 best case 10, 0 -10 ; best is -1000; score > best score